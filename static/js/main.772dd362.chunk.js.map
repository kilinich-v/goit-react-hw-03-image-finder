{"version":3,"sources":["components/SearchBar/SearchBar.jsx","gallery-servises/apiGallery.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["SearchBar","onSubmit","useState","input","setInput","className","event","preventDefault","type","value","autoComplete","autoFocus","placeholder","onChange","target","axios","defaults","baseURL","ImageGalleryItem","images","onClick","makeImageAlt","data","slice","length","replace","split","join","map","image","largeImageURL","pageURL","src","webformatURL","alt","id","Modal","imageModal","closeModal","useEffect","document","addEventListener","e","code","nodeName","url","Button","props","ImageGallery","query","page","changePage","setImages","setImageModal","isLoading","setIsLoading","error","setError","queue","pageNumber","get","then","res","hits","catch","err","console","log","prev","window","scrollTo","top","documentElement","scrollHeight","behavior","message","finally","color","height","width","App","setQuery","currentPage","setCurrentPage","newQuery","ReactDOM","render","StrictMode","getElementById"],"mappings":"4OA0CeA,EAvCG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACRC,mBAAS,IADD,mBAC3BC,EAD2B,KACpBC,EADoB,KAclC,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaJ,SATZ,SAAAK,GACnBA,EAAMC,iBAENN,EAASE,IAMP,UACE,wBAAQK,KAAK,SAASH,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVG,KAAK,OACLC,MAAON,EACPO,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAzBY,SAAAP,GAClBF,EAASE,EAAMQ,OAAOL,gB,wCCH1BM,IAAMC,SAASC,QAAU,0BAElB,ICgCQC,EApCU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5BC,EAAe,SAAAC,GACnB,OAAOA,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCC,QAAQ,SAAU,IAClBC,MAAM,KACNC,KAAK,MAGV,OACE,oBAAItB,UAAU,eAAd,SACGc,EAAOS,KAAI,SAAAC,GACV,OACE,oBAEExB,UAAU,mBACVe,QAAS,kBACPA,EAAQS,EAAMC,cAAeT,EAAaQ,EAAME,WAJpD,SAOE,qBACEC,IAAKH,EAAMI,aACXC,IAAKb,EAAaQ,EAAME,SACxB1B,UAAU,4BATPwB,EAAMM,UCiBRC,EA7BD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC3BC,qBAAU,WACRC,SAASC,iBAAiB,WAAW,SAAAC,GACpB,WAAXA,EAAEC,MACJL,UAWN,OACE,qBAAKjC,UAAU,UAAUe,QAPX,SAAAsB,GACY,QAAtBA,EAAE5B,OAAO8B,UACXN,KAKF,SACE,qBAAKjC,UAAU,QAAf,SACE,qBAAK2B,IAAKK,EAAWQ,IAAKX,IAAKG,EAAWH,WCXnCY,EAVO,SAAAC,GACpB,OACE,qBAAK1C,UAAU,gBAAf,SACE,wBAAQA,UAAU,SAASe,QAAS2B,EAAM3B,QAA1C,0BCkES4B,G,MA5DM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAAiB,EACxBjD,mBAAS,IADe,mBAC7CiB,EAD6C,KACrCiC,EADqC,OAEhBlD,qBAFgB,mBAE7CmC,EAF6C,KAEjCgB,EAFiC,OAGlBnD,oBAAS,GAHS,mBAG7CoD,EAH6C,KAGlCC,EAHkC,OAI1BrD,mBAAS,IAJiB,mBAI7CsD,EAJ6C,KAItCC,EAJsC,KAMpDlB,qBAAU,WJTgB,IAACmB,EAAOC,EIU3BV,IAELM,GAAa,IJZYG,EIcZT,EJdmBU,EIcZT,EJbfnC,IACJ6C,IADI,gBALU,oCAKV,cAEsBF,EAFtB,iBAEoCC,EAFpC,yDAIJE,MAAK,SAAAC,GAAG,OAAIA,EAAIxC,KAAKyC,QAAMC,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,OIUhDJ,MAAK,SAAAvC,GAAI,OAAI8B,GAAU,SAAAgB,GAAI,4BAAQA,GAAR,YAAiB9C,UAC5CuC,MAAK,WACAX,EAAO,GACTmB,OAAOC,SAAS,CACdC,IAAK/B,SAASgC,gBAAgBC,aAC9BC,SAAU,cAGfV,OAAM,SAAAC,GAAG,OAAIR,EAASQ,EAAIU,YAC1BC,SAAQ,kBAAMrB,GAAa,SAC7B,CAACN,EAAOC,IAEXX,qBAAU,WACHU,IAELM,GAAa,GACbH,EAAU,OACT,CAACH,IAUJ,OACE,sBAAK5C,UAAU,YAAf,UACE,cAAC,EAAD,CAAkBc,OAAQA,EAAQC,QAVjB,SAACyB,EAAKX,GACzBmB,EAAc,CAAER,MAAKX,WAUlBsB,GAAS,6BAAKA,IACdnB,GAAc,cAAC,EAAD,CAAOA,WAAYA,EAAYC,WAR/B,WACjBe,EAAc,SAQXC,GACC,qBAAKjD,UAAU,UAAf,SACE,cAAC,IAAD,CAAQG,KAAK,YAAYqE,MAAM,UAAUC,OAAQ,GAAIC,MAAO,QAG9DzB,GAAaL,GAAS,cAAC,EAAD,CAAQ7B,QAAS+B,SC7BhC6B,EAzBH,WAAO,IAAD,EACU9E,mBAAS,IADnB,mBACT+C,EADS,KACFgC,EADE,OAEsB/E,mBAAS,GAF/B,mBAETgF,EAFS,KAEIC,EAFJ,KAIhB5C,qBAAU,WACR4C,EAAe,KACd,CAAClC,IAUJ,OACE,qCACE,cAAC,EAAD,CAAWhD,SAVK,SAAAmF,GAClBH,EAASG,MAUP,cAAC,EAAD,CAAcnC,MAAOA,EAAOC,KAAMgC,EAAa/B,WAPhC,WACjBgC,EAAeD,EAAc,UCZjCG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/C,SAASgD,eAAe,W","file":"static/js/main.772dd362.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchBar = ({ onSubmit }) => {\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleInput = event => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault() \r\n\r\n    onSubmit(input);\r\n    // setInput('');\r\n   };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          value={input}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleInput}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import axios from 'axios';\r\n\r\nconst AUTH_TOKEN = '2778632-0d9f36dba3e3cb8ecea612bcf';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\n\r\nexport const fetchGallery = (queue, pageNumber) => {\r\n  return axios\r\n    .get(\r\n      `/?key=${AUTH_TOKEN}&q=${queue}&page=${pageNumber}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(res => res.data.hits).catch(err=>console.log(err));\r\n};\r\n","import PropTypes from 'prop-types'\r\n\r\nconst ImageGalleryItem = ({ images, onClick }) => {\r\n  const makeImageAlt = data => {\r\n    return data.slice(27, data.length - 1)\r\n      .replace(/[0-9]+/, '')\r\n      .split('-')\r\n      .join(' ');\r\n  }\r\n\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(image => {\r\n        return (\r\n          <li\r\n            key={image.id}\r\n            className=\"ImageGalleryItem\"\r\n            onClick={() =>\r\n              onClick(image.largeImageURL, makeImageAlt(image.pageURL))\r\n            }\r\n          >\r\n            <img\r\n              src={image.webformatURL}\r\n              alt={makeImageAlt(image.pageURL)}\r\n              className=\"ImageGalleryItem-image\"\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ imageModal, closeModal }) => {\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', e => {\r\n      if (e.code === 'Escape') {\r\n        closeModal();\r\n      }\r\n    });\r\n  });\r\n\r\n  const onClick = e => {\r\n    if (e.target.nodeName !== 'IMG') {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={onClick}>\r\n      <div className=\"Modal\">\r\n        <img src={imageModal.url} alt={imageModal.alt} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  imageModal: PropTypes.object.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","export const Button = props => {\r\n  return (\r\n    <div className=\"flexContainer\">\r\n      <button className=\"Button\" onClick={props.onClick}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useState, useEffect } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchGallery } from '../../gallery-servises/apiGallery';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Modal from '../../components/Modal';\r\nimport Button from '../../components/Button';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst ImageGallery = ({ query, page, changePage }) => {\r\n  const [images, setImages] = useState([]);\r\n  const [imageModal, setImageModal] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!query) return;\r\n\r\n    setIsLoading(true);\r\n\r\n    fetchGallery(query, page)\r\n      .then(data => setImages(prev => [...prev, ...data]))\r\n      .then(() => {\r\n        if (page > 1)\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n      })\r\n      .catch(err => setError(err.message))\r\n      .finally(() => setIsLoading(false));\r\n  }, [query, page]);\r\n\r\n  useEffect(() => {\r\n    if (!query) return;\r\n\r\n    setIsLoading(true);\r\n    setImages([]);\r\n  }, [query]);\r\n\r\n  const onClickImage = (url, alt) => {\r\n    setImageModal({ url, alt });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setImageModal(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ImageGalleryItem images={images} onClick={onClickImage} />\r\n      {error && <h2>{error}</h2>}\r\n      {imageModal && <Modal imageModal={imageModal} closeModal={closeModal} />}\r\n      {isLoading && (\r\n        <div className=\"spinner\">\r\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={30} width={50} />\r\n        </div>\r\n      )}\r\n      {!isLoading && query && <Button onClick={changePage} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  changePage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar'\nimport ImageGallery from './components/ImageGallery'\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [query]);\n\n  const changeQuery = newQuery => {    \n    setQuery(newQuery);\n  }\n\n  const changePage = () => {\n    setCurrentPage(currentPage + 1);\n  }\n  \n  return (\n    <>\n      <SearchBar onSubmit={changeQuery} />\n      <ImageGallery query={query} page={currentPage} changePage={changePage} />\n    </>\n  );\n }\n\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}